on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest
    name: Lost Pixel

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install
          npm -g install jest

      - name: Lint
        run: npm run lint

      - name: Build Example Storybook
        run: npm run build-example-storybook

      - name: Test
        run: npm run test

      - name: Set Docker tag
        run: echo RELEASE_VERSION=$(echo ${GITHUB_RUN_NUMBER}-${GITHUB_SHA:0:8}) >> $GITHUB_ENV

      - name: Display Docker tag
        run: echo "${{ env.RELEASE_VERSION }}"

      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@191af57e15535d28b83589e3b5f0c31e76aa8733
        with:
          name: lostpixel/lost-pixel-action
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "${{ env.RELEASE_VERSION }},latest"
          buildoptions: '--compress --force-rm'

      - name: Slack Notification
        uses: 8398a7/action-slack@a74b761b4089b5d730d813fbedcd2ec5d394f3af
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} ${{ job.status }} in ${process.env.AS_TOOK}`,
                fields: [
                  {
                    title: 'Docker tag',
                    value: process.env.RELEASE_VERSION,
                    short: true
                  },
                  {
                    title: 'Repo',
                    value: process.env.AS_REPO,
                    short: true
                  }
                ]
              }]
            }
      # - name: Build Demo Storybook
      #   run: |
      #     cd examples/storybook-demo
      #     npm ci
      #     npm run build-storybook

      # - name: Test Action Container 1
      #   uses: ./
      #   with:
      #     LOST_PIXEL_PROJECT_ID: ${{ secrets.LOST_PIXEL_PROJECT_ID_1 }}
      #     STORYBOOK_PATH: 'examples/storybook-demo/storybook-static'
      #     S3_END_POINT: 'fra1.digitaloceanspaces.com'
      #     S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
      #     S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
      #     S3_BUCKET_NAME: 'lost-pixel'

      # - name: Test Action Container 2
      #   uses: ./
      #   with:
      #     LOST_PIXEL_PROJECT_ID: ${{ secrets.LOST_PIXEL_PROJECT_ID_2 }}
      #     STORYBOOK_PATH: 'examples/storybook-demo/storybook-static'
      #     S3_END_POINT: 'fra1.digitaloceanspaces.com'
      #     S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
      #     S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
      #     S3_BUCKET_NAME: 'lost-pixel'

      # - name: Setup tmate session
      #   if: ${{ failure() }}
      #   uses: mxschmitt/action-tmate@v3
      #   with:
      #     LOST_PIXEL_PROJECT_ID: 'l0s+p1xl'
      #     STORYBOOK_PATH: 'examples/storybook-demo/storybook-static'
      #     S3_END_POINT: 'fra1.digitaloceanspaces.com'
      #     S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
      #     S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
      #     S3_BUCKET_NAME: 'lost-pixel'

