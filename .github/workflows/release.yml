name: Release

on:
  release:
    types: [published]
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install
          npm -g install jest

      - name: Lint
        run: npm run lint

      - name: Build Example Storybook
        run: npm run build-example-storybook

      - name: Test
        run: npm run test

      - name: Build
        run: npm run build

      - name: Create .npmrc
        run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to npm
        run: npm publish --access public

      - name: Slack Notification
        uses: 8398a7/action-slack@a74b761b4089b5d730d813fbedcd2ec5d394f3af
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} ${{ job.status }} in ${process.env.AS_TOOK}`,
                fields: [
                  {
                    title: 'NPM Release',
                    value: process.env.GITHUB_REF,
                    short: true
                  },
                  {
                    title: 'Repo',
                    value: process.env.AS_REPO,
                    short: true
                  }
                ]
              }]
            }

      - name: Publish to Registry
        pre: echo ::save-state name=RELEASE_VERSION::$(echo ${GITHUB_REF:10})
        uses: elgohr/Publish-Docker-Github-Action@47433670daec88d900599790a6fadbf5291a835b
        with:
          name: lostpixel/lost-pixel-action
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "latest,${{ env.STATE_RELEASE_VERSION }}"
          buildoptions: '--compress --force-rm'

      - name: Slack Notification
        uses: 8398a7/action-slack@a74b761b4089b5d730d813fbedcd2ec5d394f3af
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} ${{ job.status }} in ${process.env.AS_TOOK}`,
                fields: [
                  {
                    title: 'Docker tag',
                    value: process.env.RELEASE_VERSION,
                    short: true
                  },
                  {
                    title: 'Repo',
                    value: process.env.AS_REPO,
                    short: true
                  }
                ]
              }]
            }
